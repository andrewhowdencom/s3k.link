terraform {
  backend "gcs" {
    bucket = "andrewhowdencom-infrastructure-state"
    prefix = "terraform/state+github"
  }

  required_providers {
    auth0 = {
      source  = "auth0/auth0"
      version = "1.1.2"
    }
  }
}

provider "auth0" {
}

resource "auth0_client" "x40-cli" {
  name        = "x40-cli"
  description = "The terminal application for the @.link shortener"

  // Native is (for example) an Android app. The CLI app is a good parallel for this.
  //
  // See: 
  // 1. https://auth0.com/docs/get-started/applications
  app_type = "native"

  callbacks = [
    // 8064 is the above-8000 port range + the decimal value of @.
    "http://localhost:8064"
  ]

  // We expect the CLI to be fully OIDC conformant. See:
  // https://auth0.com/docs/authenticate/login/oidc-conformant-authentication
  oidc_conformant = true

  grant_types = [
    // The only grant type we intend to allow is Authorization Code Flow with PKCE
    // See: https://auth0.com/docs/get-started/authentication-and-authorization-flow/authorization-code-flow-with-proof-key-for-code-exchange-pkce
    "authorization_code"
  ]
}


// Auth0 doesn't, by default, bind the assigned roles to the names. However, this can be done manually.
resource "auth0_action" "append-roles" {
  name    = "Append Roles"
  runtime = "node18"
  deploy  = true

  code = <<-EOT
/**
 * Extends the token generated by auth0 to include the roles assigned to that user.
 *
 * @param {Event} event - Details about the user and the context in which they are logging in.
 * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.
 *
 * See:
 * 1. https://auth0.com/docs/customize/actions/flows-and-triggers/login-flow#common-use-cases
 */
 exports.onExecutePostLogin = async (event, api) => {
     if (event.authorization) {
        api.idToken.setCustomClaim("x40.link/roles", event.authorization.roles);
        api.accessToken.setCustomClaim("x40.link/roles", event.authorization.roles);
    }
};
    EOT

  supported_triggers {
    id      = "post-login"
    version = "v3"
  }
}


// Bind the action to the flow.
resource "auth0_trigger_actions" "login-flow" {
  trigger = "post-login"

  actions {
    id           = auth0_action.append-roles.id
    display_name = auth0_action.append-roles.name
  }
}

// Define the roles

resource "auth0_role" "api-user" {
  name        = "https://x40.link/roles/api-user"
  description = "Users who can interact with the api.x40.link"
}