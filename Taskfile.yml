# https://taskfile.dev

version: '3'

env:
  # Disable calls to CGO, so that the binaries compiled are static.
  CGO_ENABLED: "0"

tasks:
  bin-all:
    desc: "Builds the go binaries"
    deps:
      - "bin-clean"
    summary: |
      Builds the go binaries

      Generates go binaries for all supported operating systems, and stores them under "dist/"
      with the appropriate suffix.
    cmds:
      - for:
        # Linux (both Intel and ARM)
        - GOOS: "linux"
          GOARCH: "amd64"
        - GOOS: "linux"
          GOARCH: "arm64"

        # Raspberry Pi
        - GOOS: "linux"
          GOARCH: "arm"

        # MacOS (Older Intel & Newer ARM)
        - GOOS: "darwin"
          GOARCH: "amd64"
        - GOOS: "darwin"
          GOARCH: "arm64"

        # Windows
        - GOOS: "windows"
          GOARCH: "amd64"
        - GOOS: "windows"
          GOARCH: "arm64"

        task: bin
        vars:
          GOOS: "{{ .ITEM.GOOS }}"
          GOARCH: "{{ .ITEM.GOARCH }}"

  bin:
    desc: "Build a go binary specific to an architecture and operating system"
    requires:
      vars: [GOOS, GOARCH]
    cmds:
      - mkdir -p "dist/{{ .GOOS }}+{{ .GOARCH }}"
      - go build -o "dist/{{ .GOOS }}+{{ .GOARCH }}/x40.link{{ exeExt }}"

  bin-clean:
    desc: "Clean the generated artifacts"
    cmds:
      - "rm -rf dist"

  docs:
    desc: "Build the static HTML for the documentation"
    summary: |
      Generate the static HTML for the documentation

      This documentation will then be deployed to x40.app (or similar) so that it can be viewed by people looking
      to reproduce the service.
    dir: "./docs"
    deps: ["docs-clean", "docs-install"]
    cmds:
      - "poetry run mkdocs build"

  docs-clean:
    desc: "Clean the generated documentation"
    dir: "./docs"
    cmds:
      - "rm -rf docs/content"

  docs-install:
    desc: "Install the dependencies required for the documentation"
    dir: "./docs"
    cmds:
      - "poetry install --no-root"

  docs-view:
    desc: "View the documentation on the local machine"
    dir: "./docs"
    cmds:
      - "poetry run mkdocs serve"